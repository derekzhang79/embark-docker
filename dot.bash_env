unset BASH_ENV
# we don't need to run more than once
if [[ -v __BASH_ENV ]]; then
    return
fi
export __BASH_ENV=
# if we're not pid 1, then it depends...
if [[ $$ != 1 ]]; then
    # if we didn't get loaded via .bashrc then we don't run, but a user could
    # force the run with: `export BASH_ENV_OK_PID_NOT1_NOT_BASHRC=`
    if [[ (! -v __BASHRC) && (! -v BASH_ENV_OK_PID_NOT_1_NOT_BASHRC) ]]; then
        return
    fi
fi
unset __BASHRC
# if we haven't run yet, then if we're pid 1, or we're not pid 1 but got loaded
# via .bashrc, we continue...

unset _npm_bak_config_prefix
unset npm_config_prefix
unset NPM_CONFIG_PREFIX

export _npm_bak_config_prefix=/home/embark/.npm-packages
export npm_config_prefix=$_npm_bak_config_prefix
export NPM_CONFIG_PREFIX=$npm_config_prefix

export PATH=${_PATH:-$PATH}
unset _PATH
unset __PATH

export _PATH=/home/embark/.local/bin:$PATH
export __PATH=$NPM_CONFIG_PREFIX/bin:$_PATH
export PATH=$__PATH

unset _denac
_denac () {
    if type deactivate_node &> /dev/null; then
        deactivate_node
    fi

    export PATH=$__PATH
}
export -f _denac

unset denac
denac () {
    _denac
    case $- in
        *i*) echo "Now using system version of node: $(node --version) (npm v$(npm --version))";;
    esac
}
export -f denac

unset _nac
_nac () {
    local curr_arg;
    curr_arg=${COMP_WORDS[COMP_CWORD]}
    local envs=$(basename /home/embark/.local/nodeenv/$2*)
    if [ $envs == $(echo $2*) ]; then
        COMPREPLY=()
    else
        COMPREPLY=( $(basename /home/embark/.local/nodeenv/$2*) );
    fi
}
export -f _nac

unset nac
nac () {
    local txtbld=$(tput bold)
    local txtrst=$(tput sgr0)
    local bldcyn=${txtbld}$(tput setaf 6)
    local bldred=${txtbld}$(tput setaf 1)
    local ERROR=${bldred}ERROR${txtrst}

    if [[ -z "$1" ]]; then
        echo "$ERROR: missing node environment name"
        return 1
    fi

    if [[ ! -d "/home/embark/.local/nodeenv/$1" ]]; then
        echo "$ERROR: no \"$1\" environment found in \/home/embark/.local/nodeenv"
        return 1
    fi

    _denac
    _nvm_unload
    export PATH=$_PATH

    . /home/embark/.local/nodeenv/$1/bin/activate
    case $- in
        *i*) echo "Now using NODEENV node $(node --version) (npm v$(npm --version))";;
    esac
}
export -f nac
complete -F _nac nac

unset simple_nodeenv
simple_nodeenv () {
    pushd $PWD &> /dev/null
    cd /home/embark/.local/nodeenv
    $(which nodeenv) --prebuilt --node $@
    popd &> /dev/null
    nac $2
}
export -f simple_nodeenv

unset npm_completion
npm_completion () {
    . <(npm completion)
}
export -f npm_completion

unset nvm_load
nvm_load () {
    . /home/embark/.bash_env_nvm_load
}
export -f nvm_load

unset _nvm_unload
_nvm_unload () {
    . /home/embark/.bash_env_nvm_unload
}
export -f _nvm_unload

unset nvm_unload
nvm_unload () {
    _nvm_unload
    case $- in
        *i*) echo "Now using system version of node: $(node --version) (npm v$(npm --version))";;
    esac
}
export -f nvm_unload
